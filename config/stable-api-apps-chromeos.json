[
  {
    "namespace": "accessibilityFeatures",
    "description": "Use the <code>chrome.accessibilityFeatures</code> API to manage Chrome's accessibility features. This API relies on the <a href='types#ChromeSetting'>ChromeSetting prototype of the type API</a> for getting and setting individual accessibility features. In order to get feature states the extension must request <code>accessibilityFeatures.read</code> permission. For modifying feature state, the extension needs <code>accessibilityFeatures.modify</code> permission. Note that <code>accessibilityFeatures.modify</code> does not imply <code>accessibilityFeatures.read</code> permission.",
    "properties": {
      "spokenFeedback": {
        "$ref": "types.ChromeSetting",
        "description": "<p><strong>ChromeOS only.</strong></p><p>Spoken feedback (text-to-speech). The value indicates whether the feature is enabled or not. <code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.</p>",
        "value": [
          "spokenFeedback",
          {
            "type": "boolean"
          }
        ],
        "platforms": [
          "chromeos"
        ]
      },
      "largeCursor": {
        "$ref": "types.ChromeSetting",
        "description": "<p><strong>ChromeOS only.</strong></p><p>Enlarged cursor. The value indicates whether the feature is enabled or not. <code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.</p>",
        "value": [
          "largeCursor",
          {
            "type": "boolean"
          }
        ],
        "platforms": [
          "chromeos"
        ]
      },
      "stickyKeys": {
        "$ref": "types.ChromeSetting",
        "description": "<p><strong>ChromeOS only.</strong></p><p>Sticky modifier keys (like shift or alt). The value indicates whether the feature is enabled or not. <code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.</p>",
        "value": [
          "stickyKeys",
          {
            "type": "boolean"
          }
        ],
        "platforms": [
          "chromeos"
        ]
      },
      "highContrast": {
        "$ref": "types.ChromeSetting",
        "description": "<p><strong>ChromeOS only.</strong></p><p>High contrast rendering mode. The value indicates whether the feature is enabled or not. <code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.</p>",
        "value": [
          "highContrast",
          {
            "type": "boolean"
          }
        ],
        "platforms": [
          "chromeos"
        ]
      },
      "screenMagnifier": {
        "$ref": "types.ChromeSetting",
        "description": "<p><strong>ChromeOS only.</strong></p><p>Full screen magnification. The value indicates whether the feature is enabled or not. <code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.</p>",
        "value": [
          "screenMagnifier",
          {
            "type": "boolean"
          }
        ],
        "platforms": [
          "chromeos"
        ]
      },
      "autoclick": {
        "$ref": "types.ChromeSetting",
        "description": "<p><strong>ChromeOS only.</strong></p><p>Auto mouse click after mouse stops moving. The value indicates whether the feature is enabled or not. <code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.</p>",
        "value": [
          "autoclick",
          {
            "type": "boolean"
          }
        ],
        "platforms": [
          "chromeos"
        ]
      },
      "virtualKeyboard": {
        "$ref": "types.ChromeSetting",
        "description": "<p><strong>ChromeOS only.</strong></p><p>Virtual on-screen keyboard. The value indicates whether the feature is enabled or not. <code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.</p>",
        "value": [
          "virtualKeyboard",
          {
            "type": "boolean"
          }
        ],
        "platforms": [
          "chromeos"
        ]
      },
      "caretHighlight": {
        "$ref": "types.ChromeSetting",
        "description": "<p><strong>ChromeOS only.</strong></p><p>Caret highlighting. The value indicates whether the feature is enabled or not. <code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.</p>",
        "value": [
          "caretHighlight",
          {
            "type": "boolean"
          }
        ],
        "platforms": [
          "chromeos"
        ]
      },
      "cursorHighlight": {
        "$ref": "types.ChromeSetting",
        "description": "<p><strong>ChromeOS only.</strong></p><p>Cursor highlighting. The value indicates whether the feature is enabled or not. <code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.</p>",
        "value": [
          "cursorHighlight",
          {
            "type": "boolean"
          }
        ],
        "platforms": [
          "chromeos"
        ]
      },
      "focusHighlight": {
        "$ref": "types.ChromeSetting",
        "description": "<p><strong>ChromeOS only.</strong></p><p>Focus highlighting. The value indicates whether the feature is enabled or not. <code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.</p>",
        "value": [
          "focusHighlight",
          {
            "type": "boolean"
          }
        ],
        "platforms": [
          "chromeos"
        ]
      },
      "selectToSpeak": {
        "$ref": "types.ChromeSetting",
        "description": "<p><strong>ChromeOS only.</strong></p><p>Select-to-speak. The value indicates whether the feature is enabled or not. <code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.</p>",
        "value": [
          "selectToSpeak",
          {
            "type": "boolean"
          }
        ],
        "platforms": [
          "chromeos"
        ]
      },
      "switchAccess": {
        "$ref": "types.ChromeSetting",
        "description": "<p><strong>ChromeOS only.</strong></p><p>Switch access. The value indicates whether the feature is enabled or not. <code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.</p>",
        "value": [
          "switchAccess",
          {
            "type": "boolean"
          }
        ],
        "platforms": [
          "chromeos"
        ]
      },
      "animationPolicy": {
        "$ref": "types.ChromeSetting",
        "description": "<code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.",
        "value": [
          "animationPolicy",
          {
            "type": "string",
            "enum": [
              {
                "description": "Images are allowed to animate.",
                "name": "allowed"
              },
              {
                "description": "Images are animated once.",
                "name": "once"
              },
              {
                "description": "Images are not animated.",
                "name": "none"
              }
            ]
          }
        ]
      }
    }
  },
  {
    "types": [
      {
        "id": "CharacteristicProperty",
        "type": "string",
        "enum": [
          "broadcast",
          "read",
          "writeWithoutResponse",
          "write",
          "notify",
          "indicate",
          "authenticatedSignedWrites",
          "extendedProperties",
          "reliableWrite",
          "writableAuxiliaries",
          "encryptRead",
          "encryptWrite",
          "encryptAuthenticatedRead",
          "encryptAuthenticatedWrite"
        ]
      },
      {
        "id": "DescriptorPermission",
        "type": "string",
        "enum": [
          "read",
          "write",
          "encryptedRead",
          "encryptedWrite",
          "encryptedAuthenticatedRead",
          "encryptedAuthenticatedWrite"
        ]
      },
      {
        "id": "AdvertisementType",
        "type": "string",
        "enum": [
          "broadcast",
          "peripheral"
        ]
      },
      {
        "id": "Device",
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "deviceClass": {
            "type": "integer",
            "nullable": true
          }
        }
      },
      {
        "id": "Service",
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string"
          },
          "isPrimary": {
            "type": "boolean"
          },
          "instanceId": {
            "type": "string",
            "nullable": true
          },
          "deviceAddress": {
            "type": "string",
            "nullable": true
          }
        }
      },
      {
        "id": "Characteristic",
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string"
          },
          "service": {
            "$ref": "Service",
            "nullable": true
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "CharacteristicProperty"
            }
          },
          "instanceId": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "$ref": "ArrayBuffer",
            "nullable": true
          }
        }
      },
      {
        "id": "Descriptor",
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string"
          },
          "characteristic": {
            "$ref": "Characteristic",
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "DescriptorPermission"
            }
          },
          "instanceId": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "$ref": "ArrayBuffer",
            "nullable": true
          }
        }
      },
      {
        "id": "ConnectProperties",
        "type": "object",
        "properties": {
          "persistent": {
            "type": "boolean"
          }
        }
      },
      {
        "id": "NotificationProperties",
        "type": "object",
        "properties": {
          "persistent": {
            "type": "boolean"
          }
        }
      },
      {
        "id": "ManufacturerData",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        }
      },
      {
        "id": "ServiceData",
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        }
      },
      {
        "id": "Advertisement",
        "type": "object",
        "properties": {
          "type": {
            "$ref": "AdvertisementType"
          },
          "serviceUuids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "manufacturerData": {
            "type": "array",
            "items": {
              "$ref": "ManufacturerData"
            },
            "nullable": true
          },
          "solicitUuids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "serviceData": {
            "type": "array",
            "items": {
              "$ref": "ServiceData"
            },
            "nullable": true
          }
        }
      },
      {
        "id": "Request",
        "type": "object",
        "properties": {
          "requestId": {
            "type": "integer"
          },
          "device": {
            "$ref": "Device"
          },
          "value": {
            "$ref": "ArrayBuffer",
            "nullable": true
          }
        }
      },
      {
        "id": "Response",
        "type": "object",
        "properties": {
          "requestId": {
            "type": "integer"
          },
          "isError": {
            "type": "boolean"
          },
          "value": {
            "$ref": "ArrayBuffer",
            "nullable": true
          }
        }
      },
      {
        "id": "Notification",
        "type": "object",
        "properties": {
          "value": {
            "$ref": "ArrayBuffer"
          },
          "shouldIndicate": {
            "type": "boolean",
            "nullable": true
          }
        }
      }
    ],
    "functions": [
      {
        "name": "connect",
        "type": "function",
        "parameters": [
          {
            "type": "string",
            "optional": false,
            "name": "deviceAddress"
          },
          {
            "$ref": "ConnectProperties",
            "optional": true,
            "name": "properties"
          },
          {
            "optional": false,
            "name": "callback",
            "type": "function",
            "parameters": []
          }
        ],
        "static": true
      },
      {
        "name": "disconnect",
        "type": "function",
        "parameters": [
          {
            "type": "string",
            "optional": false,
            "name": "deviceAddress"
          },
          {
            "optional": true,
            "name": "callback",
            "type": "function",
            "parameters": []
          }
        ],
        "static": true
      },
      {
        "name": "getService",
        "type": "function",
        "parameters": [
          {
            "type": "string",
            "optional": false,
            "name": "serviceId"
          },
          {
            "optional": false,
            "name": "callback",
            "type": "function",
            "parameters": [
              {
                "$ref": "Service",
                "optional": false,
                "name": "result"
              }
            ]
          }
        ],
        "static": true
      },
      {
        "name": "createService",
        "type": "function",
        "parameters": [
          {
            "$ref": "Service",
            "optional": false,
            "name": "service"
          },
          {
            "optional": false,
            "name": "callback",
            "type": "function",
            "parameters": [
              {
                "type": "string",
                "optional": false,
                "name": "serviceId"
              }
            ]
          }
        ],
        "static": true
      },
      {
        "name": "getServices",
        "type": "function",
        "parameters": [
          {
            "type": "string",
            "optional": false,
            "name": "deviceAddress"
          },
          {
            "optional": false,
            "name": "callback",
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "items": {
                  "$ref": "Service"
                },
                "optional": false,
                "name": "result"
              }
            ]
          }
        ],
        "static": true
      },
      {
        "name": "getCharacteristic",
        "type": "function",
        "parameters": [
          {
            "type": "string",
            "optional": false,
            "name": "characteristicId"
          },
          {
            "optional": false,
            "name": "callback",
            "type": "function",
            "parameters": [
              {
                "$ref": "Characteristic",
                "optional": false,
                "name": "result"
              }
            ]
          }
        ],
        "static": true
      },
      {
        "name": "createCharacteristic",
        "type": "function",
        "parameters": [
          {
            "$ref": "Characteristic",
            "optional": false,
            "name": "characteristic"
          },
          {
            "type": "string",
            "optional": false,
            "name": "serviceId"
          },
          {
            "optional": false,
            "name": "callback",
            "type": "function",
            "parameters": [
              {
                "type": "string",
                "optional": false,
                "name": "characteristicId"
              }
            ]
          }
        ],
        "static": true
      },
      {
        "name": "getCharacteristics",
        "type": "function",
        "parameters": [
          {
            "type": "string",
            "optional": false,
            "name": "serviceId"
          },
          {
            "optional": false,
            "name": "callback",
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "items": {
                  "$ref": "Characteristic"
                },
                "optional": false,
                "name": "result"
              }
            ]
          }
        ],
        "static": true
      },
      {
        "name": "getIncludedServices",
        "type": "function",
        "parameters": [
          {
            "type": "string",
            "optional": false,
            "name": "serviceId"
          },
          {
            "optional": false,
            "name": "callback",
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "items": {
                  "$ref": "Service"
                },
                "optional": false,
                "name": "result"
              }
            ]
          }
        ],
        "static": true
      },
      {
        "name": "getDescriptor",
        "type": "function",
        "parameters": [
          {
            "type": "string",
            "optional": false,
            "name": "descriptorId"
          },
          {
            "optional": false,
            "name": "callback",
            "type": "function",
            "parameters": [
              {
                "$ref": "Descriptor",
                "optional": false,
                "name": "result"
              }
            ]
          }
        ],
        "static": true
      },
      {
        "name": "createDescriptor",
        "type": "function",
        "parameters": [
          {
            "$ref": "Descriptor",
            "optional": false,
            "name": "descriptor"
          },
          {
            "type": "string",
            "optional": false,
            "name": "characteristicId"
          },
          {
            "optional": false,
            "name": "callback",
            "type": "function",
            "parameters": [
              {
                "type": "string",
                "optional": false,
                "name": "descriptorId"
              }
            ]
          }
        ],
        "static": true
      },
      {
        "name": "getDescriptors",
        "type": "function",
        "parameters": [
          {
            "type": "string",
            "optional": false,
            "name": "characteristicId"
          },
          {
            "optional": false,
            "name": "callback",
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "items": {
                  "$ref": "Descriptor"
                },
                "optional": false,
                "name": "result"
              }
            ]
          }
        ],
        "static": true
      },
      {
        "name": "readCharacteristicValue",
        "type": "function",
        "parameters": [
          {
            "type": "string",
            "optional": false,
            "name": "characteristicId"
          },
          {
            "optional": false,
            "name": "callback",
            "type": "function",
            "parameters": [
              {
                "$ref": "Characteristic",
                "optional": false,
                "name": "result"
              }
            ]
          }
        ],
        "static": true
      },
      {
        "name": "writeCharacteristicValue",
        "type": "function",
        "parameters": [
          {
            "type": "string",
            "optional": false,
            "name": "characteristicId"
          },
          {
            "$ref": "ArrayBuffer",
            "optional": false,
            "name": "value"
          },
          {
            "optional": false,
            "name": "callback",
            "type": "function",
            "parameters": []
          }
        ],
        "static": true
      },
      {
        "name": "startCharacteristicNotifications",
        "type": "function",
        "parameters": [
          {
            "type": "string",
            "optional": false,
            "name": "characteristicId"
          },
          {
            "$ref": "NotificationProperties",
            "optional": true,
            "name": "properties"
          },
          {
            "optional": false,
            "name": "callback",
            "type": "function",
            "parameters": []
          }
        ],
        "static": true
      },
      {
        "name": "stopCharacteristicNotifications",
        "type": "function",
        "parameters": [
          {
            "type": "string",
            "optional": false,
            "name": "characteristicId"
          },
          {
            "optional": true,
            "name": "callback",
            "type": "function",
            "parameters": []
          }
        ],
        "static": true
      },
      {
        "name": "notifyCharacteristicValueChanged",
        "type": "function",
        "parameters": [
          {
            "type": "string",
            "optional": false,
            "name": "characteristicId"
          },
          {
            "$ref": "Notification",
            "optional": false,
            "name": "notification"
          },
          {
            "optional": false,
            "name": "callback",
            "type": "function",
            "parameters": []
          }
        ],
        "static": true
      },
      {
        "name": "readDescriptorValue",
        "type": "function",
        "parameters": [
          {
            "type": "string",
            "optional": false,
            "name": "descriptorId"
          },
          {
            "optional": false,
            "name": "callback",
            "type": "function",
            "parameters": [
              {
                "$ref": "Descriptor",
                "optional": false,
                "name": "result"
              }
            ]
          }
        ],
        "static": true
      },
      {
        "name": "writeDescriptorValue",
        "type": "function",
        "parameters": [
          {
            "type": "string",
            "optional": false,
            "name": "descriptorId"
          },
          {
            "$ref": "ArrayBuffer",
            "optional": false,
            "name": "value"
          },
          {
            "optional": false,
            "name": "callback",
            "type": "function",
            "parameters": []
          }
        ],
        "static": true
      },
      {
        "name": "registerService",
        "type": "function",
        "parameters": [
          {
            "type": "string",
            "optional": false,
            "name": "serviceId"
          },
          {
            "optional": false,
            "name": "callback",
            "type": "function",
            "parameters": []
          }
        ],
        "static": true
      },
      {
        "name": "unregisterService",
        "type": "function",
        "parameters": [
          {
            "type": "string",
            "optional": false,
            "name": "serviceId"
          },
          {
            "optional": false,
            "name": "callback",
            "type": "function",
            "parameters": []
          }
        ],
        "static": true
      },
      {
        "name": "removeService",
        "type": "function",
        "parameters": [
          {
            "type": "string",
            "optional": false,
            "name": "serviceId"
          },
          {
            "optional": true,
            "name": "callback",
            "type": "function",
            "parameters": []
          }
        ],
        "static": true
      },
      {
        "name": "registerAdvertisement",
        "type": "function",
        "parameters": [
          {
            "$ref": "Advertisement",
            "optional": false,
            "name": "advertisement"
          },
          {
            "optional": false,
            "name": "callback",
            "type": "function",
            "parameters": [
              {
                "type": "integer",
                "optional": false,
                "name": "advertisementId"
              }
            ]
          }
        ],
        "static": true
      },
      {
        "name": "unregisterAdvertisement",
        "type": "function",
        "parameters": [
          {
            "type": "integer",
            "optional": false,
            "name": "advertisementId"
          },
          {
            "optional": false,
            "name": "callback",
            "type": "function",
            "parameters": []
          }
        ],
        "static": true
      },
      {
        "name": "setAdvertisingInterval",
        "type": "function",
        "parameters": [
          {
            "type": "integer",
            "optional": false,
            "name": "minInterval"
          },
          {
            "type": "integer",
            "optional": false,
            "name": "maxInterval"
          },
          {
            "optional": false,
            "name": "callback",
            "type": "function",
            "parameters": []
          }
        ],
        "static": true
      },
      {
        "name": "sendRequestResponse",
        "type": "function",
        "parameters": [
          {
            "$ref": "Response",
            "optional": false,
            "name": "response"
          }
        ],
        "static": true
      }
    ],
    "events": [
      {
        "name": "onServiceAdded",
        "type": "function",
        "parameters": [
          {
            "$ref": "Service",
            "optional": false,
            "name": "service"
          }
        ]
      },
      {
        "name": "onServiceChanged",
        "type": "function",
        "parameters": [
          {
            "$ref": "Service",
            "optional": false,
            "name": "service"
          }
        ]
      },
      {
        "name": "onServiceRemoved",
        "type": "function",
        "parameters": [
          {
            "$ref": "Service",
            "optional": false,
            "name": "service"
          }
        ]
      },
      {
        "name": "onCharacteristicValueChanged",
        "type": "function",
        "parameters": [
          {
            "$ref": "Characteristic",
            "optional": false,
            "name": "characteristic"
          }
        ]
      },
      {
        "name": "onDescriptorValueChanged",
        "type": "function",
        "parameters": [
          {
            "$ref": "Descriptor",
            "optional": false,
            "name": "descriptor"
          }
        ]
      },
      {
        "name": "onCharacteristicReadRequest",
        "type": "function",
        "parameters": [
          {
            "$ref": "Request",
            "optional": false,
            "name": "request"
          },
          {
            "type": "string",
            "optional": false,
            "name": "characteristicId"
          }
        ]
      },
      {
        "name": "onCharacteristicWriteRequest",
        "type": "function",
        "parameters": [
          {
            "$ref": "Request",
            "optional": false,
            "name": "request"
          },
          {
            "type": "string",
            "optional": false,
            "name": "characteristicId"
          }
        ]
      },
      {
        "name": "onDescriptorReadRequest",
        "type": "function",
        "parameters": [
          {
            "$ref": "Request",
            "optional": false,
            "name": "request"
          },
          {
            "type": "string",
            "optional": false,
            "name": "descriptorId"
          }
        ]
      },
      {
        "name": "onDescriptorWriteRequest",
        "type": "function",
        "parameters": [
          {
            "$ref": "Request",
            "optional": false,
            "name": "request"
          },
          {
            "type": "string",
            "optional": false,
            "name": "descriptorId"
          }
        ]
      }
    ],
    "namespace": "bluetoothLowEnergy",
    "dependencies": [
      "manifest:bluetooth"
    ]
  },
  {
    "types": [
      {
        "id": "ScanOptions",
        "type": "object",
        "properties": {
          "mimeTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "maxImages": {
            "type": "integer",
            "nullable": true
          }
        }
      },
      {
        "id": "ScanResults",
        "type": "object",
        "properties": {
          "dataUrls": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "mimeType": {
            "type": "string"
          }
        }
      }
    ],
    "functions": [
      {
        "name": "scan",
        "type": "function",
        "parameters": [
          {
            "$ref": "ScanOptions",
            "optional": false,
            "name": "options"
          },
          {
            "optional": false,
            "name": "callback",
            "type": "function",
            "parameters": [
              {
                "$ref": "ScanResults",
                "optional": false,
                "name": "result"
              }
            ]
          }
        ],
        "static": true
      }
    ],
    "namespace": "documentScan",
    "dependencies": [
      "permission:documentScan"
    ]
  },
  {
    "types": [
      {
        "id": "ProviderError",
        "type": "string",
        "enum": [
          "OK",
          "FAILED",
          "IN_USE",
          "EXISTS",
          "NOT_FOUND",
          "ACCESS_DENIED",
          "TOO_MANY_OPENED",
          "NO_MEMORY",
          "NO_SPACE",
          "NOT_A_DIRECTORY",
          "INVALID_OPERATION",
          "SECURITY",
          "ABORT",
          "NOT_A_FILE",
          "NOT_EMPTY",
          "INVALID_URL",
          "IO"
        ]
      },
      {
        "id": "OpenFileMode",
        "type": "string",
        "enum": [
          "READ",
          "WRITE"
        ]
      },
      {
        "id": "ChangeType",
        "type": "string",
        "enum": [
          "CHANGED",
          "DELETED"
        ]
      },
      {
        "id": "CommonActionId",
        "type": "string",
        "enum": [
          "SAVE_FOR_OFFLINE",
          "OFFLINE_NOT_NECESSARY",
          "SHARE"
        ]
      },
      {
        "id": "EntryMetadata",
        "type": "object",
        "properties": {
          "isDirectory": {
            "type": "boolean",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "size": {
            "type": "number",
            "nullable": true
          },
          "modificationTime": {
            "type": "object",
            "nullable": true
          },
          "mimeType": {
            "type": "string",
            "nullable": true
          },
          "thumbnail": {
            "type": "string",
            "nullable": true
          }
        }
      },
      {
        "id": "Watcher",
        "type": "object",
        "properties": {
          "entryPath": {
            "type": "string"
          },
          "recursive": {
            "type": "boolean"
          },
          "lastTag": {
            "type": "string",
            "nullable": true
          }
        }
      },
      {
        "id": "OpenedFile",
        "type": "object",
        "properties": {
          "openRequestId": {
            "type": "integer"
          },
          "filePath": {
            "type": "string"
          },
          "mode": {
            "$ref": "OpenFileMode"
          }
        }
      },
      {
        "id": "FileSystemInfo",
        "type": "object",
        "properties": {
          "fileSystemId": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "writable": {
            "type": "boolean"
          },
          "openedFilesLimit": {
            "type": "integer"
          },
          "openedFiles": {
            "type": "array",
            "items": {
              "$ref": "OpenedFile"
            }
          },
          "supportsNotifyTag": {
            "type": "boolean",
            "nullable": true
          },
          "watchers": {
            "type": "array",
            "items": {
              "$ref": "Watcher"
            }
          }
        }
      },
      {
        "id": "MountOptions",
        "type": "object",
        "properties": {
          "fileSystemId": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "writable": {
            "type": "boolean",
            "nullable": true
          },
          "openedFilesLimit": {
            "type": "integer",
            "nullable": true
          },
          "supportsNotifyTag": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      {
        "id": "UnmountOptions",
        "type": "object",
        "properties": {
          "fileSystemId": {
            "type": "string"
          }
        }
      },
      {
        "id": "UnmountRequestedOptions",
        "type": "object",
        "properties": {
          "fileSystemId": {
            "type": "string"
          },
          "requestId": {
            "type": "integer"
          }
        }
      },
      {
        "id": "GetMetadataRequestedOptions",
        "type": "object",
        "properties": {
          "fileSystemId": {
            "type": "string"
          },
          "requestId": {
            "type": "integer"
          },
          "entryPath": {
            "type": "string"
          },
          "isDirectory": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          },
          "size": {
            "type": "boolean"
          },
          "modificationTime": {
            "type": "boolean"
          },
          "mimeType": {
            "type": "boolean"
          },
          "thumbnail": {
            "type": "boolean"
          }
        }
      },
      {
        "id": "GetActionsRequestedOptions",
        "type": "object",
        "properties": {
          "fileSystemId": {
            "type": "string"
          },
          "requestId": {
            "type": "integer"
          },
          "entryPaths": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      {
        "id": "ReadDirectoryRequestedOptions",
        "type": "object",
        "properties": {
          "fileSystemId": {
            "type": "string"
          },
          "requestId": {
            "type": "integer"
          },
          "directoryPath": {
            "type": "string"
          },
          "isDirectory": {
            "type": "boolean"
          },
          "name": {
            "type": "boolean"
          },
          "size": {
            "type": "boolean"
          },
          "modificationTime": {
            "type": "boolean"
          },
          "mimeType": {
            "type": "boolean"
          },
          "thumbnail": {
            "type": "boolean"
          }
        }
      },
      {
        "id": "OpenFileRequestedOptions",
        "type": "object",
        "properties": {
          "fileSystemId": {
            "type": "string"
          },
          "requestId": {
            "type": "integer"
          },
          "filePath": {
            "type": "string"
          },
          "mode": {
            "$ref": "OpenFileMode"
          }
        }
      },
      {
        "id": "CloseFileRequestedOptions",
        "type": "object",
        "properties": {
          "fileSystemId": {
            "type": "string"
          },
          "requestId": {
            "type": "integer"
          },
          "openRequestId": {
            "type": "integer"
          }
        }
      },
      {
        "id": "ReadFileRequestedOptions",
        "type": "object",
        "properties": {
          "fileSystemId": {
            "type": "string"
          },
          "requestId": {
            "type": "integer"
          },
          "openRequestId": {
            "type": "integer"
          },
          "offset": {
            "type": "number"
          },
          "length": {
            "type": "number"
          }
        }
      },
      {
        "id": "CreateDirectoryRequestedOptions",
        "type": "object",
        "properties": {
          "fileSystemId": {
            "type": "string"
          },
          "requestId": {
            "type": "integer"
          },
          "directoryPath": {
            "type": "string"
          },
          "recursive": {
            "type": "boolean"
          }
        }
      },
      {
        "id": "DeleteEntryRequestedOptions",
        "type": "object",
        "properties": {
          "fileSystemId": {
            "type": "string"
          },
          "requestId": {
            "type": "integer"
          },
          "entryPath": {
            "type": "string"
          },
          "recursive": {
            "type": "boolean"
          }
        }
      },
      {
        "id": "CreateFileRequestedOptions",
        "type": "object",
        "properties": {
          "fileSystemId": {
            "type": "string"
          },
          "requestId": {
            "type": "integer"
          },
          "filePath": {
            "type": "string"
          }
        }
      },
      {
        "id": "CopyEntryRequestedOptions",
        "type": "object",
        "properties": {
          "fileSystemId": {
            "type": "string"
          },
          "requestId": {
            "type": "integer"
          },
          "sourcePath": {
            "type": "string"
          },
          "targetPath": {
            "type": "string"
          }
        }
      },
      {
        "id": "MoveEntryRequestedOptions",
        "type": "object",
        "properties": {
          "fileSystemId": {
            "type": "string"
          },
          "requestId": {
            "type": "integer"
          },
          "sourcePath": {
            "type": "string"
          },
          "targetPath": {
            "type": "string"
          }
        }
      },
      {
        "id": "TruncateRequestedOptions",
        "type": "object",
        "properties": {
          "fileSystemId": {
            "type": "string"
          },
          "requestId": {
            "type": "integer"
          },
          "filePath": {
            "type": "string"
          },
          "length": {
            "type": "number"
          }
        }
      },
      {
        "id": "WriteFileRequestedOptions",
        "type": "object",
        "properties": {
          "fileSystemId": {
            "type": "string"
          },
          "requestId": {
            "type": "integer"
          },
          "openRequestId": {
            "type": "integer"
          },
          "offset": {
            "type": "number"
          },
          "data": {
            "$ref": "ArrayBuffer"
          }
        }
      },
      {
        "id": "AbortRequestedOptions",
        "type": "object",
        "properties": {
          "fileSystemId": {
            "type": "string"
          },
          "requestId": {
            "type": "integer"
          },
          "operationRequestId": {
            "type": "integer"
          }
        }
      },
      {
        "id": "AddWatcherRequestedOptions",
        "type": "object",
        "properties": {
          "fileSystemId": {
            "type": "string"
          },
          "requestId": {
            "type": "integer"
          },
          "entryPath": {
            "type": "string"
          },
          "recursive": {
            "type": "boolean"
          }
        }
      },
      {
        "id": "RemoveWatcherRequestedOptions",
        "type": "object",
        "properties": {
          "fileSystemId": {
            "type": "string"
          },
          "requestId": {
            "type": "integer"
          },
          "entryPath": {
            "type": "string"
          },
          "recursive": {
            "type": "boolean"
          }
        }
      },
      {
        "id": "Action",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        }
      },
      {
        "id": "ExecuteActionRequestedOptions",
        "type": "object",
        "properties": {
          "fileSystemId": {
            "type": "string"
          },
          "requestId": {
            "type": "integer"
          },
          "entryPaths": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "actionId": {
            "type": "string"
          }
        }
      },
      {
        "id": "Change",
        "type": "object",
        "properties": {
          "entryPath": {
            "type": "string"
          },
          "changeType": {
            "$ref": "ChangeType"
          }
        }
      },
      {
        "id": "NotifyOptions",
        "type": "object",
        "properties": {
          "fileSystemId": {
            "type": "string"
          },
          "observedPath": {
            "type": "string"
          },
          "recursive": {
            "type": "boolean"
          },
          "changeType": {
            "$ref": "ChangeType"
          },
          "changes": {
            "type": "array",
            "items": {
              "$ref": "Change"
            },
            "nullable": true
          },
          "tag": {
            "type": "string",
            "nullable": true
          }
        }
      },
      {
        "id": "ConfigureRequestedOptions",
        "type": "object",
        "properties": {
          "fileSystemId": {
            "type": "string"
          },
          "requestId": {
            "type": "integer"
          }
        }
      }
    ],
    "functions": [
      {
        "name": "mount",
        "type": "function",
        "parameters": [
          {
            "$ref": "MountOptions",
            "optional": false,
            "name": "options"
          },
          {
            "optional": true,
            "name": "callback",
            "type": "function",
            "parameters": []
          }
        ],
        "static": true
      },
      {
        "name": "unmount",
        "type": "function",
        "parameters": [
          {
            "$ref": "UnmountOptions",
            "optional": false,
            "name": "options"
          },
          {
            "optional": true,
            "name": "callback",
            "type": "function",
            "parameters": []
          }
        ],
        "static": true
      },
      {
        "name": "getAll",
        "type": "function",
        "parameters": [
          {
            "optional": false,
            "name": "callback",
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "items": {
                  "$ref": "FileSystemInfo"
                },
                "optional": false,
                "name": "fileSystems"
              }
            ]
          }
        ],
        "static": true
      },
      {
        "name": "get",
        "type": "function",
        "parameters": [
          {
            "type": "string",
            "optional": false,
            "name": "fileSystemId"
          },
          {
            "optional": false,
            "name": "callback",
            "type": "function",
            "parameters": [
              {
                "$ref": "FileSystemInfo",
                "optional": false,
                "name": "fileSystem"
              }
            ]
          }
        ],
        "static": true
      },
      {
        "name": "notify",
        "type": "function",
        "parameters": [
          {
            "$ref": "NotifyOptions",
            "optional": false,
            "name": "options"
          },
          {
            "optional": true,
            "name": "callback",
            "type": "function",
            "parameters": []
          }
        ],
        "static": true
      }
    ],
    "events": [
      {
        "name": "onUnmountRequested",
        "type": "function",
        "parameters": [
          {
            "$ref": "UnmountRequestedOptions",
            "optional": false,
            "name": "options"
          },
          {
            "optional": false,
            "name": "successCallback",
            "type": "function",
            "parameters": []
          },
          {
            "optional": false,
            "name": "errorCallback",
            "type": "function",
            "parameters": [
              {
                "$ref": "ProviderError",
                "optional": false,
                "name": "error"
              }
            ]
          }
        ]
      },
      {
        "name": "onGetMetadataRequested",
        "type": "function",
        "parameters": [
          {
            "$ref": "GetMetadataRequestedOptions",
            "optional": false,
            "name": "options"
          },
          {
            "optional": false,
            "name": "successCallback",
            "type": "function",
            "parameters": [
              {
                "$ref": "EntryMetadata",
                "optional": false,
                "name": "metadata"
              }
            ]
          },
          {
            "optional": false,
            "name": "errorCallback",
            "type": "function",
            "parameters": [
              {
                "$ref": "ProviderError",
                "optional": false,
                "name": "error"
              }
            ]
          }
        ]
      },
      {
        "name": "onGetActionsRequested",
        "type": "function",
        "parameters": [
          {
            "$ref": "GetActionsRequestedOptions",
            "optional": false,
            "name": "options"
          },
          {
            "optional": false,
            "name": "successCallback",
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "items": {
                  "$ref": "Action"
                },
                "optional": false,
                "name": "actions"
              }
            ]
          },
          {
            "optional": false,
            "name": "errorCallback",
            "type": "function",
            "parameters": [
              {
                "$ref": "ProviderError",
                "optional": false,
                "name": "error"
              }
            ]
          }
        ]
      },
      {
        "name": "onReadDirectoryRequested",
        "type": "function",
        "parameters": [
          {
            "$ref": "ReadDirectoryRequestedOptions",
            "optional": false,
            "name": "options"
          },
          {
            "optional": false,
            "name": "successCallback",
            "type": "function",
            "parameters": [
              {
                "type": "array",
                "items": {
                  "$ref": "EntryMetadata"
                },
                "optional": false,
                "name": "entries"
              },
              {
                "type": "boolean",
                "optional": false,
                "name": "hasMore"
              }
            ]
          },
          {
            "optional": false,
            "name": "errorCallback",
            "type": "function",
            "parameters": [
              {
                "$ref": "ProviderError",
                "optional": false,
                "name": "error"
              }
            ]
          }
        ]
      },
      {
        "name": "onOpenFileRequested",
        "type": "function",
        "parameters": [
          {
            "$ref": "OpenFileRequestedOptions",
            "optional": false,
            "name": "options"
          },
          {
            "optional": false,
            "name": "successCallback",
            "type": "function",
            "parameters": []
          },
          {
            "optional": false,
            "name": "errorCallback",
            "type": "function",
            "parameters": [
              {
                "$ref": "ProviderError",
                "optional": false,
                "name": "error"
              }
            ]
          }
        ]
      },
      {
        "name": "onCloseFileRequested",
        "type": "function",
        "parameters": [
          {
            "$ref": "CloseFileRequestedOptions",
            "optional": false,
            "name": "options"
          },
          {
            "optional": false,
            "name": "successCallback",
            "type": "function",
            "parameters": []
          },
          {
            "optional": false,
            "name": "errorCallback",
            "type": "function",
            "parameters": [
              {
                "$ref": "ProviderError",
                "optional": false,
                "name": "error"
              }
            ]
          }
        ]
      },
      {
        "name": "onReadFileRequested",
        "type": "function",
        "parameters": [
          {
            "$ref": "ReadFileRequestedOptions",
            "optional": false,
            "name": "options"
          },
          {
            "optional": false,
            "name": "successCallback",
            "type": "function",
            "parameters": [
              {
                "$ref": "ArrayBuffer",
                "optional": false,
                "name": "data"
              },
              {
                "type": "boolean",
                "optional": false,
                "name": "hasMore"
              }
            ]
          },
          {
            "optional": false,
            "name": "errorCallback",
            "type": "function",
            "parameters": [
              {
                "$ref": "ProviderError",
                "optional": false,
                "name": "error"
              }
            ]
          }
        ]
      },
      {
        "name": "onCreateDirectoryRequested",
        "type": "function",
        "parameters": [
          {
            "$ref": "CreateDirectoryRequestedOptions",
            "optional": false,
            "name": "options"
          },
          {
            "optional": false,
            "name": "successCallback",
            "type": "function",
            "parameters": []
          },
          {
            "optional": false,
            "name": "errorCallback",
            "type": "function",
            "parameters": [
              {
                "$ref": "ProviderError",
                "optional": false,
                "name": "error"
              }
            ]
          }
        ]
      },
      {
        "name": "onDeleteEntryRequested",
        "type": "function",
        "parameters": [
          {
            "$ref": "DeleteEntryRequestedOptions",
            "optional": false,
            "name": "options"
          },
          {
            "optional": false,
            "name": "successCallback",
            "type": "function",
            "parameters": []
          },
          {
            "optional": false,
            "name": "errorCallback",
            "type": "function",
            "parameters": [
              {
                "$ref": "ProviderError",
                "optional": false,
                "name": "error"
              }
            ]
          }
        ]
      },
      {
        "name": "onCreateFileRequested",
        "type": "function",
        "parameters": [
          {
            "$ref": "CreateFileRequestedOptions",
            "optional": false,
            "name": "options"
          },
          {
            "optional": false,
            "name": "successCallback",
            "type": "function",
            "parameters": []
          },
          {
            "optional": false,
            "name": "errorCallback",
            "type": "function",
            "parameters": [
              {
                "$ref": "ProviderError",
                "optional": false,
                "name": "error"
              }
            ]
          }
        ]
      },
      {
        "name": "onCopyEntryRequested",
        "type": "function",
        "parameters": [
          {
            "$ref": "CopyEntryRequestedOptions",
            "optional": false,
            "name": "options"
          },
          {
            "optional": false,
            "name": "successCallback",
            "type": "function",
            "parameters": []
          },
          {
            "optional": false,
            "name": "errorCallback",
            "type": "function",
            "parameters": [
              {
                "$ref": "ProviderError",
                "optional": false,
                "name": "error"
              }
            ]
          }
        ]
      },
      {
        "name": "onMoveEntryRequested",
        "type": "function",
        "parameters": [
          {
            "$ref": "MoveEntryRequestedOptions",
            "optional": false,
            "name": "options"
          },
          {
            "optional": false,
            "name": "successCallback",
            "type": "function",
            "parameters": []
          },
          {
            "optional": false,
            "name": "errorCallback",
            "type": "function",
            "parameters": [
              {
                "$ref": "ProviderError",
                "optional": false,
                "name": "error"
              }
            ]
          }
        ]
      },
      {
        "name": "onTruncateRequested",
        "type": "function",
        "parameters": [
          {
            "$ref": "TruncateRequestedOptions",
            "optional": false,
            "name": "options"
          },
          {
            "optional": false,
            "name": "successCallback",
            "type": "function",
            "parameters": []
          },
          {
            "optional": false,
            "name": "errorCallback",
            "type": "function",
            "parameters": [
              {
                "$ref": "ProviderError",
                "optional": false,
                "name": "error"
              }
            ]
          }
        ]
      },
      {
        "name": "onWriteFileRequested",
        "type": "function",
        "parameters": [
          {
            "$ref": "WriteFileRequestedOptions",
            "optional": false,
            "name": "options"
          },
          {
            "optional": false,
            "name": "successCallback",
            "type": "function",
            "parameters": []
          },
          {
            "optional": false,
            "name": "errorCallback",
            "type": "function",
            "parameters": [
              {
                "$ref": "ProviderError",
                "optional": false,
                "name": "error"
              }
            ]
          }
        ]
      },
      {
        "name": "onAbortRequested",
        "type": "function",
        "parameters": [
          {
            "$ref": "AbortRequestedOptions",
            "optional": false,
            "name": "options"
          },
          {
            "optional": false,
            "name": "successCallback",
            "type": "function",
            "parameters": []
          },
          {
            "optional": false,
            "name": "errorCallback",
            "type": "function",
            "parameters": [
              {
                "$ref": "ProviderError",
                "optional": false,
                "name": "error"
              }
            ]
          }
        ]
      },
      {
        "name": "onConfigureRequested",
        "type": "function",
        "parameters": [
          {
            "$ref": "ConfigureRequestedOptions",
            "optional": false,
            "name": "options"
          },
          {
            "optional": false,
            "name": "successCallback",
            "type": "function",
            "parameters": []
          },
          {
            "optional": false,
            "name": "errorCallback",
            "type": "function",
            "parameters": [
              {
                "$ref": "ProviderError",
                "optional": false,
                "name": "error"
              }
            ]
          }
        ]
      },
      {
        "name": "onMountRequested",
        "type": "function",
        "parameters": [
          {
            "optional": false,
            "name": "successCallback",
            "type": "function",
            "parameters": []
          },
          {
            "optional": false,
            "name": "errorCallback",
            "type": "function",
            "parameters": [
              {
                "$ref": "ProviderError",
                "optional": false,
                "name": "error"
              }
            ]
          }
        ]
      },
      {
        "name": "onAddWatcherRequested",
        "type": "function",
        "parameters": [
          {
            "$ref": "AddWatcherRequestedOptions",
            "optional": false,
            "name": "options"
          },
          {
            "optional": false,
            "name": "successCallback",
            "type": "function",
            "parameters": []
          },
          {
            "optional": false,
            "name": "errorCallback",
            "type": "function",
            "parameters": [
              {
                "$ref": "ProviderError",
                "optional": false,
                "name": "error"
              }
            ]
          }
        ]
      },
      {
        "name": "onRemoveWatcherRequested",
        "type": "function",
        "parameters": [
          {
            "$ref": "RemoveWatcherRequestedOptions",
            "optional": false,
            "name": "options"
          },
          {
            "optional": false,
            "name": "successCallback",
            "type": "function",
            "parameters": []
          },
          {
            "optional": false,
            "name": "errorCallback",
            "type": "function",
            "parameters": [
              {
                "$ref": "ProviderError",
                "optional": false,
                "name": "error"
              }
            ]
          }
        ]
      },
      {
        "name": "onExecuteActionRequested",
        "type": "function",
        "parameters": [
          {
            "$ref": "ExecuteActionRequestedOptions",
            "optional": false,
            "name": "options"
          },
          {
            "optional": false,
            "name": "successCallback",
            "type": "function",
            "parameters": []
          },
          {
            "optional": false,
            "name": "errorCallback",
            "type": "function",
            "parameters": [
              {
                "$ref": "ProviderError",
                "optional": false,
                "name": "error"
              }
            ]
          }
        ]
      }
    ],
    "namespace": "fileSystemProvider",
    "dependencies": [
      "permission:fileSystemProvider"
    ]
  },
  {
    "types": [
      {
        "id": "Parameters",
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "broadcastAddress": {
            "type": "string",
            "nullable": true
          },
          "mtu": {
            "type": "string",
            "nullable": true
          },
          "exclusionList": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "inclusionList": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "domainSearch": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "dnsServers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "reconnect": {
            "type": "string",
            "nullable": true
          }
        }
      },
      {
        "id": "PlatformMessage",
        "type": "string",
        "enum": [
          "connected",
          "disconnected",
          "error",
          "linkDown",
          "linkUp",
          "linkChanged",
          "suspend",
          "resume"
        ]
      },
      {
        "id": "VpnConnectionState",
        "type": "string",
        "enum": [
          "connected",
          "failure"
        ]
      },
      {
        "id": "UIEvent",
        "type": "string",
        "enum": [
          "showAddDialog",
          "showConfigureDialog"
        ]
      }
    ],
    "functions": [
      {
        "name": "createConfig",
        "type": "function",
        "parameters": [
          {
            "type": "string",
            "optional": false,
            "name": "name"
          },
          {
            "optional": false,
            "name": "callback",
            "type": "function",
            "parameters": [
              {
                "type": "string",
                "optional": false,
                "name": "id"
              }
            ]
          }
        ],
        "static": true
      },
      {
        "name": "destroyConfig",
        "type": "function",
        "parameters": [
          {
            "type": "string",
            "optional": false,
            "name": "id"
          },
          {
            "optional": true,
            "name": "callback",
            "type": "function",
            "parameters": []
          }
        ],
        "static": true
      },
      {
        "name": "setParameters",
        "type": "function",
        "parameters": [
          {
            "$ref": "Parameters",
            "optional": false,
            "name": "parameters"
          },
          {
            "optional": false,
            "name": "callback",
            "type": "function",
            "parameters": []
          }
        ],
        "static": true
      },
      {
        "name": "sendPacket",
        "type": "function",
        "parameters": [
          {
            "$ref": "ArrayBuffer",
            "optional": false,
            "name": "data"
          },
          {
            "optional": true,
            "name": "callback",
            "type": "function",
            "parameters": []
          }
        ],
        "static": true
      },
      {
        "name": "notifyConnectionStateChanged",
        "type": "function",
        "parameters": [
          {
            "$ref": "VpnConnectionState",
            "optional": false,
            "name": "state"
          },
          {
            "optional": true,
            "name": "callback",
            "type": "function",
            "parameters": []
          }
        ],
        "static": true
      }
    ],
    "events": [
      {
        "name": "onPlatformMessage",
        "type": "function",
        "parameters": [
          {
            "type": "string",
            "optional": false,
            "name": "id"
          },
          {
            "$ref": "PlatformMessage",
            "optional": false,
            "name": "message"
          },
          {
            "type": "string",
            "optional": false,
            "name": "error"
          }
        ]
      },
      {
        "name": "onPacketReceived",
        "type": "function",
        "parameters": [
          {
            "$ref": "ArrayBuffer",
            "optional": false,
            "name": "data"
          }
        ]
      },
      {
        "name": "onConfigRemoved",
        "type": "function",
        "parameters": [
          {
            "type": "string",
            "optional": false,
            "name": "id"
          }
        ]
      },
      {
        "name": "onConfigCreated",
        "type": "function",
        "parameters": [
          {
            "type": "string",
            "optional": false,
            "name": "id"
          },
          {
            "type": "string",
            "optional": false,
            "name": "name"
          },
          {
            "type": "object",
            "optional": false,
            "name": "data"
          }
        ]
      },
      {
        "name": "onUIEvent",
        "type": "function",
        "parameters": [
          {
            "$ref": "UIEvent",
            "optional": false,
            "name": "event"
          },
          {
            "type": "string",
            "optional": true,
            "name": "id"
          }
        ]
      }
    ],
    "namespace": "vpnProvider",
    "dependencies": [
      "permission:vpnProvider"
    ]
  },
  {
    "namespace": "wallpaper",
    "compiler_options": {
      "implemented_in": "chrome/browser/chromeos/extensions/wallpaper_api.h"
    },
    "description": "Use the <code>chrome.wallpaper</code> API to change the ChromeOS wallpaper.",
    "types": [
      {
        "id": "WallpaperLayout",
        "type": "string",
        "enum": [
          "STRETCH",
          "CENTER",
          "CENTER_CROPPED"
        ],
        "description": "The supported wallpaper layouts."
      }
    ],
    "functions": [
      {
        "name": "setWallpaper",
        "type": "function",
        "description": "Sets wallpaper to the image at <em>url</em> or <em>wallpaperData</em> with the specified <em>layout</em>",
        "parameters": [
          {
            "name": "details",
            "type": "object",
            "properties": {
              "data": {
                "type": "binary",
                "optional": true,
                "description": "The jpeg or png encoded wallpaper image as an ArrayBuffer."
              },
              "url": {
                "type": "string",
                "optional": true,
                "description": "The URL of the wallpaper to be set (can be relative)."
              },
              "layout": {
                "$ref": "WallpaperLayout",
                "description": "The supported wallpaper layouts."
              },
              "filename": {
                "type": "string",
                "description": "The file name of the saved wallpaper."
              },
              "thumbnail": {
                "type": "boolean",
                "optional": true,
                "description": "True if a 128x60 thumbnail should be generated. Layout and ratio are not supported yet."
              }
            }
          },
          {
            "type": "function",
            "name": "callback",
            "parameters": [
              {
                "type": "binary",
                "optional": true,
                "name": "thumbnail",
                "description": "The jpeg encoded wallpaper thumbnail. It is generated by resizing the wallpaper to 128x60."
              }
            ]
          }
        ]
      }
    ],
    "dependencies": [
      "permission:wallpaper"
    ]
  }
]